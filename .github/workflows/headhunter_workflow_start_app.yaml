name: headhunter workflow
on:
  push:
    branches:
      - master
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.6
      - name: Install dependecies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install -r requirements.txt
      - name: Lint with flake8
        run: flake8 --exclude 'venv' .
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push application to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: fsow/headhunter:latest
          context: ${{ secrets.PROJECT_PATH }}
          file: ./Dockefile
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Copy files from repo via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: "docker-compose.yaml"
          target: ~/${{ secrets.PROJECT_PATH }}/

      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        env:
          FLASK_SECRET_KEY: ${{ secrets.FLASK_SECRET_KEY }}
          DB: ${{ secrets.DB }}
          REDIRECT_URL: ${{ secrets.REDIRECT_URL }}
          TOKEN_URL: ${{ secrets.TOKEN_URL }}
          GRANT_TYPE: ${{ secrets.GRANT_TYPE }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
          PROJECT_PATH: ${{ secrets.PROJECT_PATH }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          envs: FLASK_SECRET_KEY,DB,REDIRECT_URL,TOKEN_URL,GRANT_TYPE,CLIENT_ID,CLIENT_SECRET,USER_PASSWORD,PROJECT_PATH
          script: |
            cd ~/$PROJECT_PATH && \
            echo "FLASK_SECRET_KEY=$FLASK_SECRET_KEY" > .env && \
            echo "DB=$DB" >> .env && \
            echo "REDIRECT_URL=$REDIRECT_URL" >> .env && \
            echo "TOKEN_URL=$TOKEN_URL" >> .env && \
            echo "GRANT_TYPE=$GRANT_TYPE" >> .env && \
            echo "CLIENT_ID=$CLIENT_ID" >> .env && \
            echo "CLIENT_SECRET=$CLIENT_SECRET" >> .env && \
            echo $USER_PASSWORD | sudo -S docker-compose pull
            echo $USER_PASSWORD | sudo -S docker-compose up -d

